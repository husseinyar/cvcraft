rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can create their own user document (on signup)
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // A user can read or update their own document. An admin can read any user's document.
      allow read, update: if request.auth.uid == userId || isAdmin(request.auth.uid);
    }

    // Rules for the 'cvs' subcollection
    match /users/{userId}/cvs/{cvId} {
      // A user can perform any action on their own CVs.
      // An admin can read any user's CVs.
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow write: if request.auth.uid == userId && 
                       request.resource.data.userId == userId; // Ensure data integrity
    }
    
    // Rules for the 'jobApplications' subcollection
    match /users/{userId}/jobApplications/{jobId} {
       // A user can perform any action on their own job applications.
       // An admin can read any user's job applications.
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow write: if request.auth.uid == userId && 
                       request.resource.data.userId == userId; // Ensure data integrity
    }
  }
}
